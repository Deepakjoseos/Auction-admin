{"version":3,"sources":["components/shared-components/Flex/index.js","services/auth/admin.js","history.js","auth/FetchInterceptor.js","redux/reducers/Auth.js","redux/reducers/Theme.js","redux/reducers/index.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/shared-components/ColorPicker/index.js","configs/AppConfig.js","configs/EnvironmentConfig.js","constants/ThemeConstant.js","redux/constants/Auth.js","redux/constants/Theme.js","utils/index.js","components/util-components/IntlMessage/index.js","configs/NavigationConfig.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavProfile.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","hooks/useBodyClass.js","views/index.js","App.js","serviceWorker.js","index.js","redux/actions/Auth.js","components/util-components/Icon/index.js","components/shared-components/Loading/index.js"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","authAdminService","api","getProfile","a","fetch","url","method","res","console","log","data","login","createUser","info","middleName","lastName","firstName","contact","type","email","password","getUser","query","history","service","axios","create","baseURL","API_BASE_URL","timeout","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","error","notification","message","Promise","reject","response","notificationParam","status","description","removeItem","push","store","dispatch","signOutSuccess","Utils","errorValidator","initState","loading","showMessage","redirect","user","authorized","token","auth","state","action","AUTHENTICATED","payload","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SIGNOUT_SUCCESS","SIGNUP_SUCCESS","SHOW_LOADING","initTheme","THEME_CONFIG","theme","TOGGLE_COLLAPSED_NAV","navCollapsed","SIDE_NAV_STYLE_CHANGE","sideNavTheme","CHANGE_LOCALE","locale","NAV_TYPE_CHANGE","navType","TOP_NAV_COLOR_CHANGE","topNavColor","HEADER_NAV_COLOR_CHANGE","headerNavColor","TOGGLE_MOBILE_NAV","mobileNav","SWITCH_THEME","currentTheme","DIRECTION_CHANGE","direction","reducers","combineReducers","Theme","Auth","signIn","signOut","rootSaga","takeEvery","SIGNIN","call","sessionToken","success","window","setItem","getAdminProfile","put","authenticated","showAuthMessage","SIGNOUT","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","ColorPicker","colorChange","color","useState","visible","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","style","backgroundColor","onClick","onChange","value","rgb","rgba","r","g","b","APP_NAME","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","SIDE_NAV_LIGHT","NAV_TYPE_SIDE","DIR_LTR","ROW_GUTTER","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","DIR_RTL","SIGNUP","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","name","initials","match","shift","pop","toUpperCase","navTree","path","route","p","hasOwnProperty","this","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","percent","R","G","B","RR","toString","length","GG","BB","trim","str","replace","inParts","indexOf","split","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","key","toLowerCase","list","filter","item","input","searchText","screens","breakpoints","parsed","categories","category","parentId","categoryList","cat","cate","id","title","createCategoryList","Array","isArray","injectIntl","withRef","dashBoardNavTree","icon","DashboardOutlined","breadcrumb","submenu","AppstoreOutlined","navigationConfig","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","Icon","subMenuSecond","Item","to","TopNavContent","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","getLogoWidthGutter","isNavTop","mobileLogo","getLogoDisplay","onClose","placement","closable","bodyStyle","padding","ArrowLeftOutlined","menuItem","EditOutlined","useSelector","profileMenu","size","src","displayImage","el","href","e","LogoutOutlined","overlay","trigger","SelectedLanguage","language","lang","langId","getLanguageDetail","langName","maxWidth","alt","DownOutlined","onLocaleChange","configDisplay","languageOption","CheckOutlined","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","onDirectionChange","configState","isCollapse","useThemeSwitcher","switcher","themes","rgbaToHex","Group","target","Button","checked","isChecked","changedTheme","text","JSON","stringify","onCopy","CopyOutlined","block","NavPanel","showDrawer","setState","SettingOutlined","Component","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","logoType","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","slice","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","Loading","cover","component","lazy","from","React","memo","Content","AppLayout","currentRouteInfo","isNavSide","getLayoutGutter","paddingLeft","paddingRight","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","addBodyClass","document","body","classList","add","removeBodyClass","remove","RouteInterceptor","isAuthenticated","rest","render","currentAppLocale","exact","dark","process","light","App","useDispatch","showLoading","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","signUp","signInWithGoogle","signInWithFacebook","hideAuthMessage","createElement","fontSize","spin","align","indicator"],"mappings":"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","file":"static/js/main.70bf1690.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import fetch from \"auth/FetchInterceptor\";\r\n\r\nconst authAdminService = {};\r\nconst api = \"/admin\";\r\nauthAdminService.getProfile = async function () {\r\n  try {\r\n    const res = await fetch({\r\n      url: `${api}/profile`,\r\n      method: \"get\",\r\n    });\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(err, \"show-err\");\r\n  }\r\n};\r\n\r\nauthAdminService.login = async function (data) {\r\n  try {\r\n    const res = await fetch({\r\n      url: \"/auth/login\",\r\n      method: \"post\",\r\n      data,\r\n    });\r\n\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(err, \"show-err\");\r\n  }\r\n};\r\n\r\nauthAdminService.createUser = async function (info) {\r\n  try {\r\n    const middleName = info?.middleName;\r\n    const lastName = info?.lastName;\r\n    let data = {};\r\n    data.firstName = info?.firstName;\r\n    data.contact = info?.contact;\r\n    data.type = info?.type;\r\n    data.email = info?.email;\r\n    data.password = info?.password;\r\n    if (middleName) data.middleName = middleName;\r\n    if (lastName) data.lastName = lastName;\r\n\r\n    const res = await fetch({\r\n      url: `${api}/user/create`,\r\n      method: \"post\",\r\n      data,\r\n    });\r\n    console.log(res);\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(err, \"show-err\");\r\n  }\r\n};\r\n\r\nauthAdminService.getUser = async function (query) {\r\n  try {\r\n    const res = await fetch({\r\n      url: `${api}/users/all`,\r\n      method: \"get\",\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(err, \"show-err\");\r\n  }\r\n};\r\n\r\nexport default authAdminService;\r\n","import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd'\r\nimport Utils from 'utils'\r\nimport store from 'redux/store'\r\nimport { signOutSuccess } from 'redux/actions/Auth'\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000,\r\n})\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(\r\n  (config) => {\r\n    const jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\r\n    if (jwtToken) {\r\n      config.headers[TOKEN_PAYLOAD_KEY] = `Bearer ${jwtToken}`\r\n    }\r\n\r\n    // if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n    //   history.push(ENTRY_ROUTE)\r\n    //   window.location.reload()\r\n    // }\r\n\r\n    return config\r\n  },\r\n  (error) => {\r\n    // Do something with request error here\r\n    notification.error({\r\n      message: 'Error',\r\n    })\r\n    Promise.reject(error)\r\n  }\r\n)\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use(\r\n  (response) => {\r\n    return response.data\r\n  },\r\n  (error) => {\r\n    let notificationParam = {\r\n      message: '',\r\n    }\r\n\r\n    // Remove token and redirect\r\n    if (error.response.status === 401) {\r\n      notificationParam.message = 'Authentication Fail'\r\n      notificationParam.description = 'Please login again'\r\n      localStorage.removeItem(AUTH_TOKEN)\r\n      history.push(ENTRY_ROUTE)\r\n      store.dispatch(signOutSuccess())\r\n      // window.location.reload()\r\n    }\r\n\r\n    if (error.response.status === 404) {\r\n      notificationParam.message = 'Not Found'\r\n    }\r\n\r\n    if (error.response.status === 500) {\r\n      notificationParam.message = 'Internal Server Error'\r\n    }\r\n\r\n    if (error.response.status === 508) {\r\n      notificationParam.message = 'Time Out'\r\n    }\r\n\r\n    // notification.error(notificationParam)\r\n    Utils.errorValidator(error.response.data)\r\n\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service\r\n","import {\r\n  AUTHENTICATED,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNOUT_SUCCESS,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n} from '../constants/Auth'\r\n\r\nconst initState = {\r\n  loading: true,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  user: null,\r\n  authorized: null,\r\n  token: null,\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        redirect: '/',\r\n        authorized: true,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n      }\r\n    case SHOW_AUTH_MESSAGE:\r\n      return {\r\n        ...state,\r\n        message: action.message,\r\n        showMessage: true,\r\n        loading: false,\r\n      }\r\n    case HIDE_AUTH_MESSAGE:\r\n      return {\r\n        ...state,\r\n        message: '',\r\n        showMessage: false,\r\n      }\r\n    case SIGNOUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        authorized: null,\r\n        redirect: '/',\r\n        loading: false,\r\n      }\r\n    }\r\n    case SIGNUP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        token: action.token,\r\n      }\r\n    }\r\n    case SHOW_LOADING: {\r\n      return {\r\n        ...state,\r\n        loading: action.loading === null ? true : action.loading,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default auth\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    case DIRECTION_CHANGE:\r\n      return {\r\n        ...state,\r\n        direction: action.direction\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","import { all, takeEvery, put, fork, call } from 'redux-saga/effects'\r\nimport { AUTH_TOKEN, SIGNIN, SIGNOUT } from '../constants/Auth'\r\nimport { showAuthMessage, authenticated, signOutSuccess } from '../actions/Auth'\r\n\r\nimport authAdminService from 'services/auth/admin'\r\nimport { notification } from 'antd'\r\n\r\nexport function* signIn() {\r\n  yield takeEvery(SIGNIN, function* ({ payload }) {\r\n    const { email, password } = payload\r\n    try {\r\n      // const user = yield call(\r\n      //   FirebaseService.signInEmailRequest,\r\n      //   email,\r\n      //   password\r\n      // )\r\n\r\n      const user = yield call(authAdminService.login, { email, password })\r\n\r\n      if (user?.sessionToken) {\r\n        console.log('useweer', user)\r\n        notification.success({ message: 'Login success' })\r\n        window.localStorage.setItem(AUTH_TOKEN, user.sessionToken)\r\n        const getAdminProfile = yield call(authAdminService.getProfile)\r\n        yield put(authenticated(user, getAdminProfile))\r\n      }\r\n    } catch (err) {\r\n      yield put(showAuthMessage(err))\r\n    }\r\n  })\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n    try {\r\n      localStorage.removeItem(AUTH_TOKEN)\r\n      yield put(signOutSuccess())\r\n    } catch (err) {\r\n      yield put(showAuthMessage(err))\r\n    }\r\n  })\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(signIn), fork(signOut)])\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport reducers from '../reducers'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from '../sagas/index'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst middlewares = [sagaMiddleware]\r\n\r\nfunction configureStore(preloadedState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n  const store = createStore(\r\n    reducers,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n  )\r\n\r\n  sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('../reducers/index', () => {\r\n      const nextRootReducer = require('../reducers/index')\r\n      store.replaceReducer(nextRootReducer)\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\nconst store = configureStore()\r\n\r\nexport default store\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import {\r\n  SIDE_NAV_LIGHT,\r\n  NAV_TYPE_SIDE,\r\n  DIR_LTR,\r\n} from \"constants/ThemeConstant\";\r\nimport { env } from \"./EnvironmentConfig\";\r\n\r\nexport const APP_NAME = \"Auction\";\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL;\r\nexport const APP_PREFIX_PATH = \"/app\";\r\nexport const AUTH_PREFIX_PATH = \"/auth\";\r\n\r\nexport const THEME_CONFIG = {\r\n  navCollapsed: false,\r\n  sideNavTheme: SIDE_NAV_LIGHT,\r\n  locale: \"en\",\r\n  navType: NAV_TYPE_SIDE,\r\n  topNavColor: \"#3e82f7\",\r\n  headerNavColor: \"\",\r\n  mobileNav: false,\r\n  currentTheme: \"light\",\r\n  direction: DIR_LTR,\r\n};\r\n","const dev = {\r\n  //   API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n  API_ENDPOINT_URL: \"https://auction.riolabz.com/v1/\",\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: \"https://auction.riolabz.com/v1/\",\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: \"https://auction.riolabz.com/v1/\",\r\n  // API_ENDPOINT_URL: 'https://lotterybackend.riolabz.com/v1/',\r\n};\r\n\r\nconst getEnv = () => {\r\n  switch (process.env.NODE_ENV) {\r\n    case \"development\":\r\n      return dev;\r\n    case \"production\":\r\n      return prod;\r\n    case \"test\":\r\n      return test;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const env = getEnv();\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\nexport const DIR_LTR = 'ltr'\r\nexport const DIR_RTL = 'rtl'\r\n","export const SIGNIN = 'SIGNIN'\r\nexport const AUTHENTICATED = 'AUTHENTICATED'\r\nexport const SIGNOUT = 'SIGNOUT'\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP'\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED =\r\n  'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED =\r\n  'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'\r\n","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';\r\nexport const DIRECTION_CHANGE = 'DIRECTION_CHANGE';","import { message, notification } from \"antd\";\r\n\r\nclass Utils {\r\n  /**\r\n   * Get first character from first & last sentences of a username\r\n   * @param {String} name - Username\r\n   * @return {String} 2 characters string\r\n   */\r\n  static getNameInitial(name) {\r\n    let initials = name.match(/\\b\\w/g) || [];\r\n    return ((initials.shift() || \"\") + (initials.pop() || \"\")).toUpperCase();\r\n  }\r\n\r\n  /**\r\n   * Get current path related object from Navigation Tree\r\n   * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n   * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n   * @return {Object} object that contained the path string\r\n   */\r\n  static getRouteInfo(navTree, path) {\r\n    if (navTree.path === path) {\r\n      return navTree;\r\n    }\r\n    let route;\r\n    for (let p in navTree) {\r\n      if (navTree.hasOwnProperty(p) && typeof navTree[p] === \"object\") {\r\n        route = this.getRouteInfo(navTree[p], path);\r\n        if (route) {\r\n          return route;\r\n        }\r\n      }\r\n    }\r\n    return route;\r\n  }\r\n\r\n  /**\r\n   * Get accessible color contrast\r\n   * @param {String} hex - Hex color code e.g '#3e82f7'\r\n   * @return {String} 'dark' or 'light'\r\n   */\r\n  static getColorContrast(hex) {\r\n    if (!hex) {\r\n      return \"dark\";\r\n    }\r\n    const threshold = 130;\r\n    const hRed = hexToR(hex);\r\n    const hGreen = hexToG(hex);\r\n    const hBlue = hexToB(hex);\r\n    function hexToR(h) {\r\n      return parseInt(cutHex(h).substring(0, 2), 16);\r\n    }\r\n    function hexToG(h) {\r\n      return parseInt(cutHex(h).substring(2, 4), 16);\r\n    }\r\n    function hexToB(h) {\r\n      return parseInt(cutHex(h).substring(4, 6), 16);\r\n    }\r\n    function cutHex(h) {\r\n      return h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\r\n    }\r\n    const cBrightness = (hRed * 299 + hGreen * 587 + hBlue * 114) / 1000;\r\n    if (cBrightness > threshold) {\r\n      return \"dark\";\r\n    } else {\r\n      return \"light\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Darken or lighten a hex color\r\n   * @param {String} color - Hex color code e.g '#3e82f7'\r\n   * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n   * @return {String} Darken or lighten color\r\n   */\r\n  static shadeColor(color, percent) {\r\n    let R = parseInt(color.substring(1, 3), 16);\r\n    let G = parseInt(color.substring(3, 5), 16);\r\n    let B = parseInt(color.substring(5, 7), 16);\r\n    R = parseInt((R * (100 + percent)) / 100);\r\n    G = parseInt((G * (100 + percent)) / 100);\r\n    B = parseInt((B * (100 + percent)) / 100);\r\n    R = R < 255 ? R : 255;\r\n    G = G < 255 ? G : 255;\r\n    B = B < 255 ? B : 255;\r\n    const RR =\r\n      R.toString(16).length === 1 ? `0${R.toString(16)}` : R.toString(16);\r\n    const GG =\r\n      G.toString(16).length === 1 ? `0${G.toString(16)}` : G.toString(16);\r\n    const BB =\r\n      B.toString(16).length === 1 ? `0${B.toString(16)}` : B.toString(16);\r\n    return `#${RR}${GG}${BB}`;\r\n  }\r\n\r\n  /**\r\n   * Convert RGBA to HEX\r\n   * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n   * @return {String} HEX color\r\n   */\r\n  static rgbaToHex(rgba) {\r\n    const trim = (str) => str.replace(/^\\s+|\\s+$/gm, \"\");\r\n    const inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n      r = parseInt(trim(inParts[0].substring(1)), 10),\r\n      g = parseInt(trim(inParts[1]), 10),\r\n      b = parseInt(trim(inParts[2]), 10),\r\n      a = parseFloat(\r\n        trim(inParts[3].substring(0, inParts[3].length - 1))\r\n      ).toFixed(2);\r\n    const outParts = [\r\n      r.toString(16),\r\n      g.toString(16),\r\n      b.toString(16),\r\n      Math.round(a * 255)\r\n        .toString(16)\r\n        .substring(0, 2),\r\n    ];\r\n\r\n    outParts.forEach(function (part, i) {\r\n      if (part.length === 1) {\r\n        outParts[i] = \"0\" + part;\r\n      }\r\n    });\r\n    return `#${outParts.join(\"\")}`;\r\n  }\r\n\r\n  /**\r\n   * Returns either a positive or negative\r\n   * @param {Number} number - number value\r\n   * @param {any} positive - value that return when positive\r\n   * @param {any} negative - value that return when negative\r\n   * @return {any} positive or negative value based on param\r\n   */\r\n  static getSignNum(number, positive, negative) {\r\n    if (number > 0) {\r\n      return positive;\r\n    }\r\n    if (number < 0) {\r\n      return negative;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Returns either ascending or descending value\r\n   * @param {Object} a - antd Table sorter param a\r\n   * @param {Object} b - antd Table sorter param b\r\n   * @param {String} key - object key for compare\r\n   * @return {any} a value minus b value\r\n   */\r\n  static antdTableSorter(a, b, key) {\r\n    if (typeof a[key] === \"number\" && typeof b[key] === \"number\") {\r\n      return a[key] - b[key];\r\n    }\r\n\r\n    if (typeof a[key] === \"string\" && typeof b[key] === \"string\") {\r\n      a = a[key].toLowerCase();\r\n      b = b[key].toLowerCase();\r\n      return a > b ? -1 : b > a ? 1 : 0;\r\n    }\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Filter array of object\r\n   * @param {Array} list - array of objects that need to filter\r\n   * @param {String} key - object key target\r\n   * @param {any} value  - value that excluded from filter\r\n   * @return {Array} a value minus b value\r\n   */\r\n  static filterArray(list, key, value) {\r\n    let data = list;\r\n    if (list) {\r\n      data = list.filter((item) => item[key] === value);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Remove object from array by value\r\n   * @param {Array} list - array of objects\r\n   * @param {String} key - object key target\r\n   * @param {any} value  - target value\r\n   * @return {Array} Array that removed target object\r\n   */\r\n  static deleteArrayRow(list, key, value) {\r\n    let data = list;\r\n    if (list) {\r\n      data = list.filter((item) => item[key] !== value);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Wild card search on all property of the object\r\n   * @param {Number | String} input - any value to search\r\n   * @param {Array} list - array for search\r\n   * @return {Array} array of object contained keyword\r\n   */\r\n  static wildCardSearch(list, input) {\r\n    const searchText = (item) => {\r\n      for (let key in item) {\r\n        if (item[key] == null) {\r\n          continue;\r\n        }\r\n        if (\r\n          item[key]\r\n            .toString()\r\n            .toUpperCase()\r\n            .indexOf(input.toString().toUpperCase()) !== -1\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    };\r\n    list = list.filter((value) => searchText(value));\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * Get Breakpoint\r\n   * @param {Object} screens - Grid.useBreakpoint() from antd\r\n   * @return {Array} array of breakpoint size\r\n   */\r\n  static getBreakPoint(screens) {\r\n    let breakpoints = [];\r\n    for (const key in screens) {\r\n      if (screens.hasOwnProperty(key)) {\r\n        const element = screens[key];\r\n        if (element) {\r\n          breakpoints.push(key);\r\n        }\r\n      }\r\n    }\r\n    return breakpoints;\r\n  }\r\n\r\n  /**\r\n   * Get BaseName of the file\r\n   */\r\n\r\n  static getBaseName(path) {\r\n    // console.log(path)\r\n    if (path) {\r\n      const parsed = path.split(\"/\");\r\n      return parsed[parsed.length - 1];\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  /**\r\n   * Create Categories based on the list of items including children\r\n   */\r\n  static createCategoryList(categories, parentId = null) {\r\n    const categoryList = [];\r\n    let category;\r\n    if (parentId == null) {\r\n      category = categories.filter((cat) => !cat?.parentId);\r\n    } else {\r\n      category = categories.filter((cat) => cat?.parentId === parentId);\r\n    }\r\n    // eslint-disable-next-line prefer-const\r\n    for (let cate of category) {\r\n      categoryList.push({\r\n        id: cate.id,\r\n        title: cate.name,\r\n        value: cate.id,\r\n        key: cate.id,\r\n        children: this.createCategoryList(categories, cate.id),\r\n      });\r\n    }\r\n\r\n    return categoryList;\r\n  }\r\n\r\n  static errorValidator(res) {\r\n    console.log(\"my-res\", res);\r\n    if (res) {\r\n      if (Array.isArray(res?.message)) {\r\n        // for (const [key, value] of Object.entries(res?.errors)) {\r\n        //   value.forEach((cur) => {\r\n        //     notification.error({\r\n        //       description: key,\r\n        //       message: cur,\r\n        //     })\r\n        //   })\r\n        // }\r\n        res.message?.forEach((message) => {\r\n          notification.error({\r\n            message,\r\n          });\r\n        });\r\n      } else if (!Array.isArray(res?.message)) {\r\n        notification.error({\r\n          message: res?.message,\r\n        });\r\n      } else {\r\n        // toast.error(res.title)\r\n        notification.error({\r\n          // description: res.title,\r\n          message: res.error,\r\n        });\r\n      }\r\n    }\r\n    //  else {\r\n    //   notification.error({\r\n    //     description: 'Something Went Wrong',\r\n    //     message: 'Error',\r\n    //   });\r\n    // }\r\n  }\r\n}\r\n\r\nexport default Utils;\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import {\r\n  DashboardOutlined,\r\n  AppstoreOutlined,\r\n  FileTextOutlined,\r\n  PieChartOutlined,\r\n  BorderOutlined,\r\n  EnvironmentOutlined,\r\n  AntDesignOutlined,\r\n  SafetyOutlined,\r\n  StopOutlined,\r\n  DotChartOutlined,\r\n  NodeExpandOutlined,\r\n  MailOutlined,\r\n  MessageOutlined,\r\n  CalendarOutlined,\r\n  BulbOutlined,\r\n  InfoCircleOutlined,\r\n  CompassOutlined,\r\n  LayoutOutlined,\r\n  DesktopOutlined,\r\n  FileDoneOutlined,\r\n  CommentOutlined,\r\n  RobotOutlined,\r\n  PlusCircleOutlined,\r\n  FundOutlined,\r\n  VerifiedOutlined,\r\n  ShoppingCartOutlined,\r\n  BookOutlined,\r\n  FileUnknownOutlined,\r\n  ProfileOutlined,\r\n  FundProjectionScreenOutlined,\r\n  UsergroupAddOutlined,\r\n  FormatPainterOutlined,\r\n  UserOutlined,\r\n  ApartmentOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\n// const extraNavTree = [\r\n//   {\r\n//     key: \"extra\",\r\n//     path: `${APP_PREFIX_PATH}/pages`,\r\n//     title: \"sidenav.pages\",\r\n//     icon: PlusCircleOutlined,\r\n//     breadcrumb: true,\r\n//     submenu: [\r\n//       {\r\n//         key: \"extra-pages\",\r\n//         path: `${APP_PREFIX_PATH}/pages`,\r\n//         title: \"sidenav.pages\",\r\n//         icon: FileTextOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: \"extra-pages-profile\",\r\n//             path: `${APP_PREFIX_PATH}/pages/profile`,\r\n//             title: \"sidenav.pages.profile\",\r\n//             icon: \"\",\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"extra-pages-list\",\r\n//             path: `${APP_PREFIX_PATH}/pages/user-list`,\r\n//             title: \"sidenav.pages.userlist\",\r\n//             icon: \"\",\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"extra-pages-invoice\",\r\n//             path: `${APP_PREFIX_PATH}/pages/invoice`,\r\n//             title: \"sidenav.pages.invoice\",\r\n//             icon: \"\",\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"extra-pages-pricing\",\r\n//             path: `${APP_PREFIX_PATH}/pages/pricing`,\r\n//             title: \"sidenav.pages.pricing\",\r\n//             icon: \"\",\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"extra-pages-faq\",\r\n//             path: `${APP_PREFIX_PATH}/pages/faq`,\r\n//             title: \"sidenav.pages.faq\",\r\n//             icon: \"\",\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"extra-pages-setting\",\r\n//             path: `${APP_PREFIX_PATH}/pages/setting`,\r\n//             title: \"sidenav.pages.setting\",\r\n//             icon: \"\",\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         key: \"extra-auth\",\r\n//         path: `${AUTH_PREFIX_PATH}`,\r\n//         title: \"sidenav.authentication\",\r\n//         icon: SafetyOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: \"extra-auth-login-1\",\r\n//             path: `${AUTH_PREFIX_PATH}/login-1`,\r\n//             title: \"sidenav.authentication.login.1\",\r\n//             icon: \"\",\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"extra-auth-login-2\",\r\n//             path: `${AUTH_PREFIX_PATH}/login-2`,\r\n//             title: \"sidenav.authentication.login.2\",\r\n//             icon: \"\",\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"extra-auth-register-1\",\r\n//             path: `${AUTH_PREFIX_PATH}/register-1`,\r\n//             title: \"sidenav.authentication.register.1\",\r\n//             icon: \"\",\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"extra-auth-register-2\",\r\n//             path: `${AUTH_PREFIX_PATH}/register-2`,\r\n//             title: \"sidenav.authentication.register.2\",\r\n//             icon: \"\",\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"extra-auth-forgot-password\",\r\n//             path: `${AUTH_PREFIX_PATH}/forgot-password`,\r\n//             title: \"sidenav.authentication.forgetPassword\",\r\n//             icon: \"\",\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         key: \"extra-errors\",\r\n//         path: `${AUTH_PREFIX_PATH}/error-1`,\r\n//         title: \"sidenav.errors\",\r\n//         icon: StopOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: \"extra-errors-error-1\",\r\n//             path: `${AUTH_PREFIX_PATH}/error-1`,\r\n//             title: \"sidenav.errors.error.1\",\r\n//             icon: \"\",\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: \"extra-errors-error-2\",\r\n//             path: `${AUTH_PREFIX_PATH}/error-2`,\r\n//             title: \"sidenav.errors.error.2\",\r\n//             icon: \"\",\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\nconst dashBoardNavTree = [\r\n  {\r\n    key: \"dashboards\",\r\n    path: `${APP_PREFIX_PATH}/dashboards`,\r\n    title: \"sidenav.dashboard\",\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [\r\n      {\r\n        key: \"dashboards-user\",\r\n        path: `${APP_PREFIX_PATH}/dashboards/user`,\r\n        title: \"User\",\r\n        icon: AppstoreOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"dashboards-information\",\r\n        path: `${APP_PREFIX_PATH}/dashboards/information`,\r\n        title: \"Information\",\r\n        icon: AppstoreOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"dashboards-car\",\r\n        path: `${APP_PREFIX_PATH}/dashboards/car`,\r\n        title: \"Car\",\r\n        icon: AppstoreOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: \"dashboards-settings\",\r\n        path: `${APP_PREFIX_PATH}/dashboards/settings`,\r\n        title: \"Settings\",\r\n        icon: AppstoreOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n  \r\n];\r\n\r\n// const appsNavTree = [\r\n//   {\r\n//     key: 'apps',\r\n//     path: `${APP_PREFIX_PATH}/apps`,\r\n//     title: 'sidenav.apps',\r\n//     icon: AppstoreOutlined,\r\n//     breadcrumb: false,\r\n//     submenu: [\r\n//       {\r\n//         key: 'apps-mail',\r\n//         path: `${APP_PREFIX_PATH}/apps/mail/inbox`,\r\n//         title: 'sidenav.apps.mail',\r\n//         icon: MailOutlined,\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: 'apps-chat',\r\n//         path: `${APP_PREFIX_PATH}/apps/chat`,\r\n//         title: 'sidenav.apps.chat',\r\n//         icon: MessageOutlined,\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: 'apps-calendar',\r\n//         path: `${APP_PREFIX_PATH}/apps/calendar`,\r\n//         title: 'sidenav.apps.calendar',\r\n//         icon: CalendarOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: 'apps-project',\r\n//         path: `${APP_PREFIX_PATH}/apps/project`,\r\n//         title: 'sidenav.apps.project',\r\n//         icon: BulbOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'apps-project-list',\r\n//             path: `${APP_PREFIX_PATH}/apps/project/list`,\r\n//             title: 'sidenav.apps.project.list',\r\n//             icon: '',\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'apps-project-scrumboard',\r\n//             path: `${APP_PREFIX_PATH}/apps/project/scrumboard`,\r\n//             title: 'sidenav.apps.project.scrumboard',\r\n//             icon: '',\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         key: 'apps-ecommerce',\r\n//         path: `${APP_PREFIX_PATH}/apps/ecommerce`,\r\n//         title: 'sidenav.apps.ecommerce',\r\n//         icon: ShoppingCartOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'apps-ecommerce-productList',\r\n//             path: `${APP_PREFIX_PATH}/apps/ecommerce/product-list`,\r\n//             title: 'sidenav.apps.ecommerce.productList',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'apps-ecommerce-addProduct',\r\n//             path: `${APP_PREFIX_PATH}/apps/ecommerce/add-product`,\r\n//             title: 'sidenav.apps.ecommerce.addProduct',\r\n//             icon: '',\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'apps-ecommerce-editProduct',\r\n//             path: `${APP_PREFIX_PATH}/apps/ecommerce/edit-product/12`,\r\n//             title: 'sidenav.apps.ecommerce.editProduct',\r\n//             icon: '',\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'apps-ecommerce-orders',\r\n//             path: `${APP_PREFIX_PATH}/apps/ecommerce/orders`,\r\n//             title: 'sidenav.apps.ecommerce.orders',\r\n//             icon: '',\r\n//             breadcrumb: false,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//     ],\r\n//   },\r\n// ]\r\n\r\n// const componentsNavTree = [\r\n//   {\r\n//     key: 'components',\r\n//     path: `${APP_PREFIX_PATH}/components`,\r\n//     title: 'sidenav.components',\r\n//     icon: AntDesignOutlined,\r\n//     breadcrumb: true,\r\n//     submenu: [\r\n//       {\r\n//         key: 'components-general',\r\n//         path: `${APP_PREFIX_PATH}/components/general`,\r\n//         title: 'sidenav.components.general',\r\n//         icon: InfoCircleOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-general-button',\r\n//             path: `${APP_PREFIX_PATH}/components/general/button`,\r\n//             title: 'sidenav.components.general.button',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-general-icon',\r\n//             path: `${APP_PREFIX_PATH}/components/general/icon`,\r\n//             title: 'sidenav.components.general.icon',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-general-typography',\r\n//             path: `${APP_PREFIX_PATH}/components/general/typography`,\r\n//             title: 'sidenav.components.general.typography',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         key: 'components-layout',\r\n//         path: `${APP_PREFIX_PATH}/components/layout`,\r\n//         title: 'sidenav.components.layout',\r\n//         icon: LayoutOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-layout-grid',\r\n//             path: `${APP_PREFIX_PATH}/components/layout/grid`,\r\n//             title: 'sidenav.components.layout.grid',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-layout-layout',\r\n//             path: `${APP_PREFIX_PATH}/components/layout/layout`,\r\n//             title: 'sidenav.components.layout.layout',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         key: 'components-navigation',\r\n//         path: `${APP_PREFIX_PATH}/components/navigation`,\r\n//         title: 'sidenav.components.navigation',\r\n//         icon: CompassOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-navigation-affix',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/affix`,\r\n//             title: 'sidenav.components.navigation.affix',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-navigation-breadcrumb',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/breadcrumb`,\r\n//             title: 'sidenav.components.navigation.breadcrumb',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-navigation-dropdown',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/dropdown`,\r\n//             title: 'sidenav.components.navigation.dropdown',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-navigation-menu',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/menu`,\r\n//             title: 'sidenav.components.navigation.menu',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-navigation-pagination',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/pagination`,\r\n//             title: 'sidenav.components.navigation.pagination',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-navigation-page-header',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/page-header`,\r\n//             title: 'sidenav.components.navigation.pageHeader',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-navigation-steps',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/steps`,\r\n//             title: 'sidenav.components.navigation.steps',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         key: 'components-data-entry',\r\n//         path: `${APP_PREFIX_PATH}/components/data-entry`,\r\n//         title: 'sidenav.components.dataEntry',\r\n//         icon: FileDoneOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-data-entry-auto-complete',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/auto-complete`,\r\n//             title: 'sidenav.components.dataEntry.autoComplete',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-checkbox',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/checkbox`,\r\n//             title: 'sidenav.components.dataEntry.checkbox',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-cascader',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/cascader`,\r\n//             title: 'sidenav.components.dataEntry.cascader',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-date-picker',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/date-picker`,\r\n//             title: 'sidenav.components.dataEntry.datePicker',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-form',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/form`,\r\n//             title: 'sidenav.components.dataEntry.form',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-input-number',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/input-number`,\r\n//             title: 'sidenav.components.dataEntry.inputNumber',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-input',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/input`,\r\n//             title: 'sidenav.components.dataEntry.input',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-mentions',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/mentions`,\r\n//             title: 'sidenav.components.dataEntry.mentions',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-rate',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/rate`,\r\n//             title: 'sidenav.components.dataEntry.rate',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-radio',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/radio`,\r\n//             title: 'sidenav.components.dataEntry.radio',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-switch',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/switch`,\r\n//             title: 'sidenav.components.dataEntry.switch',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-slider',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/slider`,\r\n//             title: 'sidenav.components.dataEntry.slider',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-select',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/select`,\r\n//             title: 'sidenav.components.dataEntry.select',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-tree-select',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/tree-select`,\r\n//             title: 'sidenav.components.dataEntry.treeSelect',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-transfer',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/transfer`,\r\n//             title: 'sidenav.components.dataEntry.transfer',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-time-picker',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/time-picker`,\r\n//             title: 'sidenav.components.dataEntry.timePicker',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-upload',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/upload`,\r\n//             title: 'sidenav.components.dataEntry.upload',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         key: 'components-data-display',\r\n//         path: `${APP_PREFIX_PATH}/components/data-display`,\r\n//         title: 'sidenav.components.dataDisplay',\r\n//         icon: DesktopOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-data-display-avatar',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/avatar`,\r\n//             title: 'sidenav.components.dataDisplay.avatar',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-badge',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/badge`,\r\n//             title: 'sidenav.components.dataDisplay.badge',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-comment',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/comment`,\r\n//             title: 'sidenav.components.dataDisplay.comment',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-collapse',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/collapse`,\r\n//             title: 'sidenav.components.dataDisplay.collapse',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-carousel',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/carousel`,\r\n//             title: 'sidenav.components.dataDisplay.carousel',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-card',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/card`,\r\n//             title: 'sidenav.components.dataDisplay.card',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-calendar',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/calendar`,\r\n//             title: 'sidenav.components.dataDisplay.calendar',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-descriptions',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/descriptions`,\r\n//             title: 'sidenav.components.dataDisplay.descriptions',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-empty',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/empty`,\r\n//             title: 'sidenav.components.dataDisplay.empty',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-list',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/list`,\r\n//             title: 'sidenav.components.dataDisplay.list',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-popover',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/popover`,\r\n//             title: 'sidenav.components.dataDisplay.popover',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-statistic',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/statistic`,\r\n//             title: 'sidenav.components.dataDisplay.statistic',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-tree',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/tree`,\r\n//             title: 'sidenav.components.dataDisplay.tree',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-tooltip',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/tooltip`,\r\n//             title: 'sidenav.components.dataDisplay.tooltip',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-timeline',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/timeline`,\r\n//             title: 'sidenav.components.dataDisplay.timeline',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-tag',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/tag`,\r\n//             title: 'sidenav.components.dataDisplay.tag',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-tabs',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/tabs`,\r\n//             title: 'sidenav.components.dataDisplay.tabs',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-table',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/table`,\r\n//             title: 'sidenav.components.dataDisplay.table',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         key: 'components-feedback',\r\n//         path: `${APP_PREFIX_PATH}/components/feedback`,\r\n//         title: 'sidenav.components.feedback',\r\n//         icon: CommentOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-feedback-alert',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/alert`,\r\n//             title: 'sidenav.components.feedback.alert',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-drawer',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/drawer`,\r\n//             title: 'sidenav.components.feedback.drawer',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-modal',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/modal`,\r\n//             title: 'sidenav.components.feedback.modal',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-message',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/message`,\r\n//             title: 'sidenav.components.feedback.message',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-notification',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/notification`,\r\n//             title: 'sidenav.components.feedback.notification',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-progress',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/progress`,\r\n//             title: 'sidenav.components.feedback.progress',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-popconfirm',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/popconfirm`,\r\n//             title: 'sidenav.components.feedback.popconfirm',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-result',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/result`,\r\n//             title: 'sidenav.components.feedback.result',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-spin',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/spin`,\r\n//             title: 'sidenav.components.feedback.spin',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-skeleton',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/skeleton`,\r\n//             title: 'sidenav.components.feedback.skeleton',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         key: 'components-other',\r\n//         path: `${APP_PREFIX_PATH}/components/other`,\r\n//         title: 'sidenav.components.other',\r\n//         icon: RobotOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-other-anchor',\r\n//             path: `${APP_PREFIX_PATH}/components/other/anchor`,\r\n//             title: 'sidenav.components.other.anchor',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-other-backtop',\r\n//             path: `${APP_PREFIX_PATH}/components/other/backtop`,\r\n//             title: 'sidenav.components.other.backtop',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-other-config-provider',\r\n//             path: `${APP_PREFIX_PATH}/components/other/config-provider`,\r\n//             title: 'sidenav.components.other.configProvider',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-other-divider',\r\n//             path: `${APP_PREFIX_PATH}/components/other/divider`,\r\n//             title: 'sidenav.components.other.divider',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         key: 'components-charts',\r\n//         path: `${APP_PREFIX_PATH}/components/charts`,\r\n//         title: 'sidenav.charts',\r\n//         icon: PieChartOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-charts-apex',\r\n//             path: `${APP_PREFIX_PATH}/components/charts/apex-charts`,\r\n//             title: 'sidenav.charts.apex',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-charts-chartjs',\r\n//             path: `${APP_PREFIX_PATH}/components/charts/chartjs`,\r\n//             title: 'sidenav.charts.chartjs',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//       {\r\n//         key: 'components-maps',\r\n//         path: `${APP_PREFIX_PATH}/components/maps`,\r\n//         title: 'sidenav.maps',\r\n//         icon: EnvironmentOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-maps-google',\r\n//             path: `${APP_PREFIX_PATH}/components/maps/google-map`,\r\n//             title: 'sidenav.maps.google',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//           {\r\n//             key: 'components-maps-simple',\r\n//             path: `${APP_PREFIX_PATH}/components/maps/simple-map`,\r\n//             title: 'sidenav.maps.simple',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: [],\r\n//           },\r\n//         ],\r\n//       },\r\n//     ],\r\n//   },\r\n// ]\r\n\r\n// const docsNavTree = [\r\n//   {\r\n//     key: 'docs',\r\n//     path: `${APP_PREFIX_PATH}/docs`,\r\n//     title: 'sidenav.docs',\r\n//     icon: BookOutlined,\r\n//     breadcrumb: false,\r\n//     submenu: [\r\n//       {\r\n//         key: 'docs-documentation',\r\n//         path: `${APP_PREFIX_PATH}/docs/documentation`,\r\n//         title: 'sidenav.docs.documentation',\r\n//         icon: FileUnknownOutlined,\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//       {\r\n//         key: 'docs-changelog',\r\n//         path: `${APP_PREFIX_PATH}/docs/documentation/changelog`,\r\n//         title: 'sidenav.docs.changelog',\r\n//         icon: ProfileOutlined,\r\n//         breadcrumb: false,\r\n//         submenu: [],\r\n//       },\r\n//     ],\r\n//   },\r\n// ]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree,\r\n  // ...appsNavTree,\r\n  // ...componentsNavTree,\r\n  //  ...extraNavTree,\r\n  // ...docsNavTree,\r\n];\r\n\r\nexport default navigationConfig;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n\r\nexport function onDirectionChange(direction) {\r\n  return {\r\n    type: DIRECTION_CHANGE,\r\n    direction\r\n  };\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span className=\"d-flex align-items-center\">\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  popupClassName=\"top-nav-menu\"\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from \"react\";\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_TOP,\r\n} from \"constants/ThemeConstant\";\r\nimport { APP_NAME } from \"configs/AppConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport utils from \"utils\";\r\nimport { Grid } from \"antd\";\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\r\n  if (isMobile && !props.mobileLogo) {\r\n    return 0;\r\n  }\r\n  if (isNavTop) {\r\n    return \"auto\";\r\n  }\r\n  if (navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`;\r\n  }\r\n};\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if (logoType === \"light\") {\r\n    if (navCollapsed) {\r\n      return \"/img/logo-sm-white.png\";\r\n    }\r\n    return \"/img/logo-white.png\";\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return \"/img/logo-sm.png\";\r\n  }\r\n  return \"/img/logo.png\";\r\n};\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if (isMobile && !mobileLogo) {\r\n    return \"d-none\";\r\n  } else {\r\n    return \"logo\";\r\n  }\r\n};\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)}\r\n      style={{ width: `${getLogoWidthGutter(props, isMobile)}` }}\r\n    >\r\n      {/* <img src={getLogo(props)} alt={`${APP_NAME} logo`} /> */}\r\n      <h2>{APP_NAME}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } = theme;\r\n  return { navCollapsed, navType };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from 'react'\r\nimport { Drawer } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { NAV_TYPE_SIDE } from 'constants/ThemeConstant'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport MenuContent from './MenuContent'\r\nimport { onMobileNavToggle } from 'redux/actions/Theme'\r\nimport Logo from './Logo'\r\nimport Flex from 'components/shared-components/Flex'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization }\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false)\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          {/* <Logo mobileLogo={true} /> */}\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme\r\n  return { navCollapsed, sideNavTheme, mobileNav }\r\n}\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav)\r\n","import React from 'react'\r\nimport { Menu, Dropdown, Avatar } from 'antd'\r\nimport { connect, useSelector } from 'react-redux'\r\nimport { EditOutlined, LogoutOutlined } from '@ant-design/icons'\r\nimport Icon from 'components/util-components/Icon'\r\nimport { signOut } from 'redux/actions/Auth'\r\n\r\nconst menuItem = [\r\n  {\r\n    title: 'Edit Profile',\r\n    icon: EditOutlined,\r\n    path: '/app/dashboards/profile',\r\n  },\r\n]\r\n\r\nexport const NavProfile = ({ signOut }) => {\r\n  const { user } = useSelector((state) => state.auth)\r\n\r\n  const profileImg = '/img/avatars/thumb-1.jpg'\r\n  const profileMenu = (\r\n    <div className=\"nav-profile nav-dropdown\">\r\n      <div className=\"nav-profile-header\">\r\n        <div className=\"d-flex\">\r\n          <Avatar size={45} src={user?.displayImage} />\r\n          <div className=\"pl-3\">\r\n            <h4 className=\"mb-0\">{user?.name}</h4>\r\n            <span className=\"text-muted\">{user?.type}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"nav-profile-body\">\r\n        <Menu>\r\n          {menuItem.map((el, i) => {\r\n            return (\r\n              <Menu.Item key={i}>\r\n                <a href={el.path}>\r\n                  <Icon type={el.icon} />\r\n                  <span className=\"font-weight-normal\">{el.title}</span>\r\n                </a>\r\n              </Menu.Item>\r\n            )\r\n          })}\r\n          <Menu.Item key={menuItem.length + 1} onClick={(e) => signOut()}>\r\n            <span>\r\n              <LogoutOutlined />\r\n              <span className=\"font-weight-normal\">Sign Out</span>\r\n            </span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  )\r\n  return (\r\n    <Dropdown placement=\"bottomRight\" overlay={profileMenu} trigger={['click']}>\r\n      <Menu className=\"d-flex align-item-center\" mode=\"horizontal\">\r\n        <Menu.Item key=\"profile\">\r\n          <Avatar src={user?.displayImage} />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default connect(null, { signOut })(NavProfile)\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={elm.langName} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item key=\"language\">\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK,\r\n\tDIR_RTL,\r\n\tDIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tdirection,\r\n\tonDirectionChange\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Direction:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onDirectionChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={direction}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_LTR}>LTR</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_RTL}>RTL</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item key=\"panel\" onClick={this.showDrawer}>\r\n            <span><SettingOutlined className=\"nav-icon mr-0\" /></span>\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement={this.props.direction === DIR_RTL ? 'left' : 'right'} \r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput'\r\n\r\nexport const NavSearch = (props) => {\r\n  const { active, close, headerNavColor } = props\r\n  const mode = utils.getColorContrast(headerNavColor)\r\n\r\n  return (\r\n    <div\r\n      className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`}\r\n      style={{ backgroundColor: headerNavColor }}\r\n    >\r\n      <div className=\"d-flex align-items-center w-100\">\r\n        <SearchInput close={close} active={active} />\r\n      </div>\r\n      <div className=\"nav-close\" onClick={close}>\r\n        <CloseOutlined />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } = theme\r\n  return { headerNavColor }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Layout } from 'antd'\r\nimport {\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons'\r\nimport Logo from './Logo'\r\nimport NavNotification from './NavNotification'\r\nimport NavProfile from './NavProfile'\r\nimport NavLanguage from './NavLanguage'\r\nimport NavPanel from './NavPanel'\r\nimport NavSearch from './NavSearch'\r\nimport SearchInput from './NavSearch/SearchInput.js'\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme'\r\nimport {\r\n  NAV_TYPE_TOP,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  SIDE_NAV_WIDTH,\r\n} from 'constants/ThemeConstant'\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout\r\n\r\nexport const HeaderNav = (props) => {\r\n  const {\r\n    navCollapsed,\r\n    mobileNav,\r\n    navType,\r\n    headerNavColor,\r\n    toggleCollapsedNav,\r\n    onMobileNavToggle,\r\n    isMobile,\r\n    currentTheme,\r\n    direction,\r\n  } = props\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchActive = () => {\r\n    setSearchActive(true)\r\n  }\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if (!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = () => {\r\n    if (!headerNavColor) {\r\n      return utils.getColorContrast(\r\n        currentTheme === 'dark' ? '#00000' : '#ffffff'\r\n      )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if (isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header\r\n      className={`app-header ${navMode}`}\r\n      style={{ backgroundColor: headerNavColor }}\r\n    >\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode} />\r\n        <div className=\"nav\" style={{ width: `calc(100% - ${getNavWidth()})` }}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">\r\n              {isNavTop && !isMobile ? null : (\r\n                <li\r\n                  className=\"ant-menu-item ant-menu-item-only-child\"\r\n                  onClick={() => {\r\n                    onToggle()\r\n                  }}\r\n                >\r\n                  {navCollapsed || isMobile ? (\r\n                    <MenuUnfoldOutlined className=\"nav-icon\" />\r\n                  ) : (\r\n                    <MenuFoldOutlined className=\"nav-icon\" />\r\n                  )}\r\n                </li>\r\n              )}\r\n              {/* {isMobile ? (\r\n                <li\r\n                  className=\"ant-menu-item ant-menu-item-only-child\"\r\n                  onClick={() => {\r\n                    onSearchActive()\r\n                  }}\r\n                >\r\n                  <SearchOutlined />\r\n                </li>\r\n              ) : (\r\n                <li\r\n                  className=\"ant-menu-item ant-menu-item-only-child\"\r\n                  style={{ cursor: 'auto' }}\r\n                >\r\n                  <SearchInput mode={mode} isMobile={isMobile} />\r\n                </li>\r\n              )} */}\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            {/* <NavNotification /> */}\r\n            {/* <NavLanguage /> */}\r\n            <NavProfile />\r\n            {/* <NavPanel direction={direction} /> */}\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose} />\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const {\r\n    navCollapsed,\r\n    navType,\r\n    headerNavColor,\r\n    mobileNav,\r\n    currentTheme,\r\n    direction,\r\n  } = theme\r\n  return {\r\n    navCollapsed,\r\n    navType,\r\n    headerNavColor,\r\n    mobileNav,\r\n    currentTheme,\r\n    direction,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  toggleCollapsedNav,\r\n  onMobileNavToggle,\r\n})(HeaderNav)\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\treturn (\r\n\t\t<Breadcrumb.Item key={url}>\r\n\t\t\t<Link to={url}>{breadcrumbData[url]}</Link>\r\n\t\t</Breadcrumb.Item>\r\n\t\t);\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span>\r\n        Copyright &copy; {`${new Date().getFullYear()}`}{' '}\r\n        <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights\r\n        reserved.\r\n      </span>\r\n      {/* <div>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Term & Conditions</a>\r\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Privacy & Policy</a>\r\n\t\t\t</div> */}\r\n    </footer>\r\n  )\r\n}\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/dashboards`} component={lazy(() => import(`./dashboards`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/apps`} component={lazy(() => import(`./apps`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/components`} component={lazy(() => import(`./components`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/pages`} component={lazy(() => import(`./pages`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/maps`} component={lazy(() => import(`./maps`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/charts`} component={lazy(() => import(`./charts`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/docs`} component={lazy(() => import(`./docs`))} />\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/dashboards`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport SideNav from 'components/layout-components/SideNav'\r\nimport TopNav from 'components/layout-components/TopNav'\r\nimport Loading from 'components/shared-components/Loading'\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav'\r\nimport PageHeader from 'components/layout-components/PageHeader'\r\nimport Footer from 'components/layout-components/Footer'\r\nimport AppViews from 'views/app-views'\r\nimport { Layout, Grid } from 'antd'\r\n\r\nimport navigationConfig from 'configs/NavigationConfig'\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR,\r\n} from 'constants/ThemeConstant'\r\nimport utils from 'utils'\r\nimport { useThemeSwitcher } from 'react-css-theme-switcher'\r\n\r\nconst { Content } = Layout\r\nconst { useBreakpoint } = Grid\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location, direction }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(\r\n    navigationConfig,\r\n    location.pathname\r\n  )\r\n  const screens = utils.getBreakPoint(useBreakpoint())\r\n  const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if (isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher()\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if (direction === DIR_LTR) {\r\n      return { paddingLeft: getLayoutGutter() }\r\n    }\r\n    if (direction === DIR_RTL) {\r\n      return { paddingRight: getLayoutGutter() }\r\n    }\r\n    return { paddingLeft: getLayoutGutter() }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile} />\r\n      {isNavTop && !isMobile ? <TopNav routeInfo={currentRouteInfo} /> : null}\r\n      <Layout className=\"app-container\">\r\n        {isNavSide && !isMobile ? (\r\n          <SideNav routeInfo={currentRouteInfo} />\r\n        ) : null}\r\n        <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader\r\n              display={currentRouteInfo?.breadcrumb}\r\n              title={currentRouteInfo?.title}\r\n            />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } = theme\r\n  return { navCollapsed, navType, locale }\r\n}\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout))\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nexport const AuthLayout = () => {\r\n\tconst { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import {useEffect} from 'react';\r\n\r\nconst addBodyClass = className => document.body.classList.add(className);\r\nconst removeBodyClass = className => document.body.classList.remove(className);\r\n\r\nexport default function useBodyClass(className) {\r\n    useEffect(\r\n\t\t\t() => {\r\n\t\t\t\t// Set up\r\n\t\t\t\tclassName instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\r\n\r\n\t\t\t\t// Clean up\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\t\tclassName instanceof Array ? className.map(removeBodyClass) : removeBodyClass(className);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[className]\r\n    );\r\n}","import React from 'react'\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport AppLayout from 'layouts/app-layout'\r\nimport AuthLayout from 'layouts/auth-layout'\r\nimport AppLocale from 'lang'\r\nimport { IntlProvider } from 'react-intl'\r\nimport { ConfigProvider } from 'antd'\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\nimport useBodyClass from 'hooks/useBodyClass'\r\nimport Loading from 'components/shared-components/Loading'\r\n\r\nfunction RouteInterceptor({ children, isAuthenticated, loading, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        loading && !isAuthenticated ? (\r\n          <Loading cover=\"content\" />\r\n        ) : isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          !loading &&\r\n          !isAuthenticated && (\r\n            <Redirect\r\n              to={{\r\n                pathname: AUTH_PREFIX_PATH,\r\n                state: { from: location },\r\n              }}\r\n            />\r\n          )\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport const Views = (props) => {\r\n  const { locale, authorized, token, location, direction, loading } = props\r\n  console.log('auth', authorized)\r\n  const currentAppLocale = AppLocale[locale]\r\n  useBodyClass(`dir-${direction}`)\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}\r\n    >\r\n      <ConfigProvider locale={currentAppLocale.antd} direction={direction}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout direction={direction} />\r\n          </Route>\r\n          <RouteInterceptor\r\n            path={APP_PREFIX_PATH}\r\n            isAuthenticated={authorized}\r\n            loading={loading}\r\n          >\r\n            <AppLayout direction={direction} location={location} />\r\n          </RouteInterceptor>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale, direction } = theme\r\n  const { token, authorized, loading } = auth\r\n  return { locale, direction, token, authorized, loading }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views))\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Views from \"./views\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from \"./configs/AppConfig\";\r\nimport authAdminService from \"services/auth/admin\";\r\nimport { authenticated, showLoading } from \"redux/actions/Auth\";\r\nimport { AUTH_TOKEN } from \"redux/constants/Auth\";\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const getProfile = async () => {\r\n    const data = await authAdminService.getProfile();\r\n    if (data) {\r\n      dispatch(authenticated({ user: data }));\r\n      dispatch(showLoading(false));\r\n    }\r\n    dispatch(showLoading(false));\r\n  };\r\n\r\n  // Auth check\r\n  useEffect(() => {\r\n    dispatch(showLoading(true));\r\n    const token = window.localStorage.getItem(AUTH_TOKEN);\r\n    if (token) {\r\n      getProfile();\r\n    } else {\r\n      dispatch(showLoading(false));\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeSwitcherProvider\r\n        themeMap={themes}\r\n        defaultTheme={THEME_CONFIG.currentTheme}\r\n        insertionPoint=\"styles-insertion-point\"\r\n      >\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" component={Views} />\r\n          </Switch>\r\n        </Router>\r\n      </ThemeSwitcherProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n} from '../constants/Auth'\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user,\r\n  }\r\n}\r\n\r\nexport const authenticated = (data) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT,\r\n  }\r\n}\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n}\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user,\r\n  }\r\n}\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token,\r\n  }\r\n}\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE,\r\n  }\r\n}\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token,\r\n  }\r\n}\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK,\r\n  }\r\n}\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token,\r\n  }\r\n}\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message,\r\n  }\r\n}\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  }\r\n}\r\n\r\nexport const showLoading = (loading) => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n    loading,\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading"],"sourceRoot":""}